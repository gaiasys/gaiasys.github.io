<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Gaia Systems Inc.</title>
    <link>https://gaiasys.github.io/blog/</link>
    <description>Recent content in Blogs on Gaia Systems Inc.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Nov 2019 14:51:12 +0600</lastBuildDate>
    
	<atom:link href="https://gaiasys.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Should I re-develop my whole web application?</title>
      <link>https://gaiasys.github.io/blog/should_i_redevelop_my_whole_web_application/</link>
      <pubDate>Tue, 05 Nov 2019 14:51:12 +0600</pubDate>
      
      <guid>https://gaiasys.github.io/blog/should_i_redevelop_my_whole_web_application/</guid>
      <description>People are always calling me and asking to redevelop their websites. “It’s not working exactly to specification”, “There is too much technical debt”, “The old developer was an amateur that we hired and they ran off halfway through”. These are comments that I hear all the time. In general, it is not a good idea to rebuild your web application from the ground up for the following reasons:
 It does not take into account the time and energy the first developer put into developing the original site It doesn’t solve the problems that are actually plaguing the initial site, if not solved at the root the rebuild will usually also have these problems A lot of the time spent redeveloping an application is spent re-implementing features that are actually not broken (simple CRUD functionality)  All rules come with exceptions and this one is no different.</description>
    </item>
    
    <item>
      <title>How to fix performance issues with Ruby on Rails</title>
      <link>https://gaiasys.github.io/blog/optimizing_active_record_queries/</link>
      <pubDate>Mon, 28 Oct 2019 14:51:12 +0600</pubDate>
      
      <guid>https://gaiasys.github.io/blog/optimizing_active_record_queries/</guid>
      <description>The most common problem that Ruby on Rails has with performance is a mis-use of the ORM layer (Active Record). People will call dependent objects in a loop not realizing what is happening between the application and the database. If you want a performant application instead of thinking only about your application code it is important to understand how what you are doing in the application layer is interacting with the database.</description>
    </item>
    
    <item>
      <title>Duke University Case Study</title>
      <link>https://gaiasys.github.io/blog/duke/</link>
      <pubDate>Tue, 17 Sep 2019 14:51:12 +0600</pubDate>
      
      <guid>https://gaiasys.github.io/blog/duke/</guid>
      <description>Duke University found us on Slack when they were experiencing growth in one of their research departments. The code base was very well organized but extremely complicated. We were tasked with implementing the business logic for multiple studies as well as making improvements to performance and general maintenance of a text-message based application that helped researches study obesity and send/ gather responses from participants.</description>
    </item>
    
    <item>
      <title>First Secured Administrators Case Study</title>
      <link>https://gaiasys.github.io/blog/first_secured_administrators/</link>
      <pubDate>Fri, 09 Aug 2019 14:51:12 +0600</pubDate>
      
      <guid>https://gaiasys.github.io/blog/first_secured_administrators/</guid>
      <description>First Secured Administrators is one of our clients from Utah. When they called us they had an application that was not serving any customers and developers that were completely unresponsive. Initially we gathered business requirements for the site, and developed what they had into something their customers actually wanted to use. We scaled the technology over the course of a year and a half to support an increase of 2 million dollars of annual revenue.</description>
    </item>
    
    <item>
      <title>Artesian House Case Study</title>
      <link>https://gaiasys.github.io/blog/artesian_house/</link>
      <pubDate>Wed, 12 Sep 2018 14:51:12 +0600</pubDate>
      
      <guid>https://gaiasys.github.io/blog/artesian_house/</guid>
      <description>Artesian House, an LLC located in Stuart, Florida was losing about $10,000 dollars a year due to fees when collecting payments. After implementing one of our products (my halfway) this expense went down to zero. As another value-add, we simplified their client onboarding process and helped them become 100% paperless. This equated to more cost savings due to expenses and employee time.</description>
    </item>
    
    <item>
      <title>Software Update For Temple</title>
      <link>https://gaiasys.github.io/blog/temple_gis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gaiasys.github.io/blog/temple_gis/</guid>
      <description>One of the research departments at Temple Universrity reached out to us for help updating their software. They only had $3000 dollars for the project but through quick implementation and patience we actually made the project work.</description>
    </item>
    
  </channel>
</rss>